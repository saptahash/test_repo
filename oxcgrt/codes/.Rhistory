slice_tail(n=1) %>%
filter(!is.na(RegionCode))
temp_tibble <- left_join(base_tibble %>% select(-Date), gri_max_tibble, by = c("RegionName", "RegionCode"))
temp_tibble <- left_join(temp_tibble, cases_tibble, by = c("RegionName", "RegionCode"))
temp_tibble <- unique(temp_tibble) %>% filter(!is.na(RegionName))
temp_tibble <-
temp_tibble %>%
mutate(RegionCode = str_extract(RegionCode, pattern = "[A-Z][A-Z]$"))
## Selecting only the relevant variables and cleaning up.
temp_tibble <-
oxcgrtUS %>%
select(RegionName, RegionCode, Date, ConfirmedCases, ContainmentHealthIndexForDisplay, ConfirmedDeaths, GovernmentResponseIndexForDisplay, StringencyIndexForDisplay, EconomicSupportIndexForDisplay) %>%
group_by(RegionCode) %>%
arrange(RegionCode, Date) %>%
fill(ContainmentHealthIndexForDisplay, .direction = "down") %>%
fill(StringencyIndexForDisplay, .direction = "down") %>%
fill(EconomicSupportIndexForDisplay, .direction = "down") %>%
mutate(Date = ymd(Date))
temp_tibble <- temp_tibble[(!temp_tibble$RegionName==""),]
temp_tibble <- temp_tibble[(!temp_tibble$RegionName=="Virgin Islands"),]
stateDataNew$RegionName <- gsub("District of Columbia", "Washington DC", stateDataNew$RegionName)
temp_tibble <- merge(temp_tibble, stateDataNew, by = "RegionName")
temp_tibble <-
temp_tibble %>%
mutate(RegionCode = gsub(".*_", "", RegionCode))
## Generate a dataframe with just a list of weights based on population share
statePop <-
temp_tibble %>%
select(contains(c("RegionCode", "Pop2019"))) %>%
distinct(Pop2019, .keep_all=TRUE) %>%
mutate(USPop = sum(Pop2019),
weight = Pop2019/USPop) %>%
select(RegionCode, weight)
## Recombine into a dataframe with both the indexes and weights. This is where I calculated a weighted mean for all state responses across every index, including econ, health, and gov response.
weightTibble <- merge(temp_tibble, statePop, by = "RegionCode")
weightTibble <-
weightTibble %>%
select(contains(c("Date", "RegionCode", "weight", "StringencyIndexForDisplay", "EconomicSupportIndexForDisplay", "ContainmentHealthIndexForDisplay", "GovernmentResponseIndexForDisplay"))) %>%
arrange(Date) %>%
group_by(Date) %>%
mutate(avgWeightedStringency = weighted.mean(StringencyIndexForDisplay, weight),
avgWeightedEcon = weighted.mean(EconomicSupportIndexForDisplay, weight),
avgWeightedCHI = weighted.mean(ContainmentHealthIndexForDisplay, weight),
avgWeightedGRI = weighted.mean(GovernmentResponseIndexForDisplay, weight)) %>%
select(contains(c("Date", "avgWeightedStringency", "avgWeightedEcon", "avgWeightedCHI", "avgWeightedGRI")))
#Merge with the dataframe that has NAT_TOTAL data
USData <- merge(USData, weightTibble, by="Date")
USData <-
USData %>%
select(contains(c("Date", "StringencyIndexForDisplay", "avgWeightedStringency", "avgWeightedEcon", "avgWeightedCHI", "avgWeightedGRI"))) %>%
fill(avgWeightedEcon, .direction = "down") %>%
fill(avgWeightedGRI, .direction = "down")
USData2 <- merge(USData, Nat, by="Date")
USData2 <-
USData2 %>%
select(Date, natGovStringency, StringencyIndexForDisplay, avgWeightedStringency) %>%
gather(key = "Type", value = "Stringency", -Date)
USData2$Type <- factor(USData2$Type, levels = c("StringencyIndexForDisplay",  "avgWeightedStringency", "natGovStringency"))
USData3 <-
USData %>%
select(Date, avgWeightedStringency, avgWeightedEcon, avgWeightedCHI, avgWeightedGRI) %>%
gather(key = "Type", value = "Stringency", -Date)
USData3$Type <- factor(USData3$Type, levels = c("avgWeightedCHI", "avgWeightedGRI",  "avgWeightedStringency", "avgWeightedEcon"))
cols <- c("avgWeightedStringency" = "red", "StringencyIndexForDisplay" = "black", "natGovStringency" = "blue")
plot <-
ggplot(data = USData2, aes(x = Date)) +
geom_line(aes(y = Stringency, group = Type, colour = Type)) +
scale_x_date(breaks = as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2021-01-01"),
by = "2 month")),
labels = format.Date(as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2021-01-01"),
by = "2 month")), "%d-%b-%y")) +
scale_colour_manual(values = cols,
name = "",
breaks = c("StringencyIndexForDisplay", "avgWeightedStringency", "natGovStringency"),
labels = c("Overall Stringency Index for USA","Weighted Stringency Index of States", "Federal Government Stringency Index" )) +
labs(y = "Stringency Index",
x = "") +
coord_cartesian(ylim = c(0, 100), xlim = as.Date(c("2020-01-01", "2021-01-01")), expand = F) +
expand_limits(y = c(0, 100)) +
scale_y_continuous(breaks = seq(0, 100, by = 20)) +
theme(panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.grid.major = element_line(size = 0.5, linetype = "dashed", colour = "grey"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(size = 11),
legend.spacing.y = unit(1, "cm"))
ggsave(plot,
filename = "NHB_USA.png",
height = 6,
width = 12)
plot <-
ggplot(data = USData2, aes(x = Date)) +
geom_line(aes(y = Stringency, group = Type, colour = Type)) +
scale_x_date(breaks = as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2021-01-01"),
by = "2 month")),
labels = format.Date(as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2021-01-01"),
by = "2 month")), "%d-%b-%y")) +
scale_colour_manual(values = cols,
name = "",
breaks = c("StringencyIndexForDisplay", "avgWeightedStringency", "natGovStringency"),
labels = c("Overall Stringency Index for USA","Weighted Stringency Index of States", "Federal Government Stringency Index" )) +
labs(y = "Stringency Index",
x = "") +
coord_cartesian(ylim = c(0, 100), xlim = as.Date(c("2020-01-01", "2021-01-01")), expand = F) +
expand_limits(y = c(0, 100)) +
scale_y_continuous(breaks = seq(0, 100, by = 20)) +
theme(panel.background = element_blank(),
#legend.position = c(0.90, 1.05),
axis.line = element_line(colour = "black", size = 0.1),
panel.grid.major = element_line(size = 0.01, linetype = "dashed", colour = "grey"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(size = 3),
legend.spacing.y = unit(0.1, "mm"),
#legend.key.width = unit(10, "mm"),
legend.key.height = unit(2, "mm"),
axis.text.x = element_text(size = 2),
axis.text.y = element_text(size = 2),
axis.title.x = element_text(size = 2),
axis.title.y = element_text(size = 3),
#plot.margin = unit(c(5,5,5,5), "mm"),
axis.ticks = element_line(size = 0.1),
legend.margin = margin(0,0,0,0),
legend.box.margin = margin(0,0,0,0))
ggsave(plot,
filename = "NHB_USA.png",
height = 3,
width = 6,
units = "cm")
plot <-
ggplot(data = USData2, aes(x = Date)) +
geom_line(aes(y = Stringency, group = Type, colour = Type), size = 0.1) +
scale_x_date(breaks = as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2021-01-01"),
by = "2 month")),
labels = format.Date(as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2021-01-01"),
by = "2 month")), "%d-%b-%y")) +
scale_colour_manual(values = cols,
name = "",
breaks = c("StringencyIndexForDisplay", "avgWeightedStringency", "natGovStringency"),
labels = c("Overall Stringency Index for USA","Weighted Stringency Index of States", "Federal Government Stringency Index" )) +
labs(y = "Stringency Index",
x = "") +
coord_cartesian(ylim = c(0, 100), xlim = as.Date(c("2020-01-01", "2021-01-01")), expand = F) +
expand_limits(y = c(0, 100)) +
scale_y_continuous(breaks = seq(0, 100, by = 20)) +
theme(panel.background = element_blank(),
#legend.position = c(0.90, 1.05),
axis.line = element_line(colour = "black", size = 0.1),
panel.grid.major = element_line(size = 0.01, linetype = "dashed", colour = "grey"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(size = 3),
legend.spacing.y = unit(0.1, "mm"),
#legend.key.width = unit(10, "mm"),
legend.key.height = unit(2, "mm"),
axis.text.x = element_text(size = 2),
axis.text.y = element_text(size = 2),
axis.title.x = element_text(size = 2),
axis.title.y = element_text(size = 3),
#plot.margin = unit(c(5,5,5,5), "mm"),
axis.ticks = element_line(size = 0.1),
legend.margin = margin(0,0,0,0),
legend.box.margin = margin(0,0,0,0))
ggsave(plot,
filename = "NHB_USA.png",
height = 3,
width = 6,
units = "cm")
ggsave(plot, filename = "NHB_SFig2_Brazil.eps", height = 3, width = 6, units = "cm", device="eps")
ggsave(plot, filename = "NHB_SFig2_USA.eps", height = 3, width = 6, units = "cm", device="eps")
ggsave(plot, filename = "NHB_SFig2_USA.eps", height = 2, width = 6, units = "cm", device="eps")
cols <- c("avgWeightedStringency" = "red", "StringencyIndexForDisplay" = "black", "natGovStringency" = "blue")
plot <-
ggplot(data = USData2, aes(x = Date)) +
geom_line(aes(y = Stringency, group = Type, colour = Type), size = 0.1) +
scale_x_date(breaks = as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2021-01-01"),
by = "2 month")),
labels = format.Date(as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2021-01-01"),
by = "2 month")), "%d-%b-%y")) +
scale_colour_manual(values = cols,
name = "",
breaks = c("StringencyIndexForDisplay", "avgWeightedStringency", "natGovStringency"),
labels = c("Overall Stringency Index\n for USA\n","Weighted Stringency Index\n of States\n", "Federal Government Stringency\n Index\n" )) +
labs(y = "Stringency Index",
x = "") +
coord_cartesian(ylim = c(0, 100), xlim = as.Date(c("2020-01-01", "2021-01-01")), expand = F) +
expand_limits(y = c(0, 100)) +
scale_y_continuous(breaks = seq(0, 100, by = 20)) +
theme(panel.background = element_blank(),
#legend.position = c(0.90, 1.05),
axis.line = element_line(colour = "black", size = 0.1),
panel.grid.major = element_line(size = 0.01, linetype = "dashed", colour = "grey"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(size = 3),
legend.spacing.y = unit(0.1, "mm"),
#legend.key.width = unit(10, "mm"),
legend.key.height = unit(2, "mm"),
axis.text.x = element_text(size = 2),
axis.text.y = element_text(size = 2),
axis.title.x = element_text(size = 2),
axis.title.y = element_text(size = 3),
#plot.margin = unit(c(5,5,5,5), "mm"),
axis.ticks = element_line(size = 0.1),
legend.margin = margin(0,0,0,0),
legend.box.margin = margin(0,0,0,0))
ggsave(plot,
filename = "NHB_USA.png",
height = 3,
width = 6,
units = "cm")
ggsave(plot, filename = "NHB_SFig2_USA.eps", height = 2, width = 6, units = "cm", device="eps")
write_csv(USData2, "NHB_SFig2_USA.csv")
oxcgrt_brazil <- read_csv(url("https://raw.githubusercontent.com/OxCGRT/Brazil-covid-policy/master/data/OxCGRT_Brazil_latest.csv"),
col_types = cols(RegionName = col_character(),
RegionCode = col_character(),
CityName = col_character(),
CityCode = col_character()))
## Graph to be made -
# 1. NAT_GOV, NAT_TOTAL and pop weighed STATE_WIDE
# Get NAT_GOV and NAT_ALL in one tibble -----------------
temp_tibble <-
oxcgrt_brazil %>%
filter(Jurisdiction == "NAT_GOV" | Jurisdiction == "NAT_TOTAL") %>%
select(Jurisdiction, Date, StringencyIndexForDisplay) %>%
group_by(Jurisdiction) %>%
arrange(Jurisdiction, Date) %>%
fill(StringencyIndexForDisplay, .direction = "down")
# Get STATE_ALL in one tibble -----------------------------
state_wide <-
oxcgrt_brazil %>%
filter(Jurisdiction == "STATE_WIDE") %>%
select(Jurisdiction, RegionName, RegionCode, Date, StringencyIndexForDisplay) %>%
group_by(RegionName) %>%
arrange(RegionName, Date) %>%
fill(StringencyIndexForDisplay, .direction = "down")
# Get population data for states -------------------
casedata <- read_csv(url("https://raw.githubusercontent.com/wcota/covid19br/master/cases-brazil-states.csv"), col_types = cols(tests = col_double(),
tests_per_100k_inhabitants = col_double()))
pop <-
casedata %>%
mutate(pop = (tests*100000/tests_per_100k_inhabitants)) %>%
filter(city == "TOTAL" & state != "TOTAL") %>%
group_by(state) %>%
arrange(state,date) %>%
slice_tail(1) %>%
select(state, tests, tests_per_100k_inhabitants, pop) %>%
filter(!is.na(tests)) %>%
select(state, pop) %>%
ungroup() %>%
mutate(state = paste0("BR_", .$state))
# Merge population data with STATE_ALL data ---------------------
state_wide <-
left_join(state_wide, pop, by = c("RegionCode" = "state"))
# create weighted means from state_wide --------------------
state_wide <-
state_wide %>%
group_by(Date, Jurisdiction) %>%
summarise(StringencyIndexForDisplay = weighted.mean(StringencyIndexForDisplay, pop, na.rm = T))
# join STATE and NAT tibble --------------------
temp_tibble <-
bind_rows(state_wide, temp_tibble)
temp_tibble <-
temp_tibble %>%
mutate(Date = lubridate::ymd(Date))
# graph it out ---------------------
cols <- c("STATE_WIDE" = "red", "NAT_TOTAL" = "black", "NAT_GOV" = "blue")
plot <-
ggplot(data = temp_tibble, aes(x = Date)) +
geom_line(aes(y = StringencyIndexForDisplay, group = Jurisdiction, colour = Jurisdiction), size = 0.1) +
scale_x_date(breaks = as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2020-12-15"),
by = "2 month")),
labels = format.Date(as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2020-12-15"),
by = "2 month")), "%d-%b-%y")) +
scale_colour_manual(values = cols,
name = "",
breaks = c("NAT_TOTAL", "STATE_WIDE", "NAT_GOV"),
labels = c("Overall Stringency Index \nfor Brazil\n","Weighted Stringency Index \nof States\n", "Federal Government Stringency \nIndex\n" )) +
labs(y = "Stringency Index",
x = "") +
coord_cartesian(ylim = c(0, 100), xlim = as.Date(c("2020-01-01", "2020-12-15")), expand = F) +
expand_limits(y = c(0, 100)) +
scale_y_continuous(breaks = seq(0, 100, by = 20)) +
theme(panel.background = element_blank(),
#legend.position = c(0.90, 1.05),
axis.line = element_line(colour = "black", size = 0.1),
panel.grid.major = element_line(size = 0.01, linetype = "dashed", colour = "grey"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(size = 3),
legend.spacing.y = unit(0.1, "mm"),
#legend.key.width = unit(10, "mm"),
legend.key.height = unit(2, "mm"),
axis.text.x = element_text(size = 2),
axis.text.y = element_text(size = 2),
axis.title.x = element_text(size = 2),
axis.title.y = element_text(size = 3),
#plot.margin = unit(c(5,5,5,5), "mm"),
axis.ticks = element_line(size = 0.1),
legend.margin = margin(0,0,0,0),
legend.box.margin = margin(0,0,0,0))
ggsave(plot,
filename = "NHB_brazil.png",
height = 3,
width = 6,
units = "cm")
ggsave(plot, filename = "NHB_SFig2_Brazil.eps", height = 2, width = 6, units = "cm", device="eps")
write_csv(temp_tibble, "NHB_SFig2_Brazil.csv")
View(temp_tibble)
plot <-
ggplot(data = temp_tibble, aes(x = Date)) +
geom_line(aes(y = StringencyIndexForDisplay, group = Jurisdiction, colour = Jurisdiction), size = 0.1) +
scale_x_date(breaks = as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2020-12-15"),
by = "2 month")),
labels = format.Date(as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2020-12-15"),
by = "2 month")), "%d-%b-%y")) +
scale_colour_manual(values = cols,
name = "",
breaks = c("NAT_TOTAL", "STATE_WIDE", "NAT_GOV"),
labels = c("Overall Stringency Index \nfor Brazil\n","Weighted Stringency Index \nof States\n", "Federal Government Stringency \nIndex\n" )) +
labs(y = "Stringency Index",
x = "") +
coord_cartesian(ylim = c(0, 100), xlim = as.Date(c("2020-01-01", "2020-12-15")), expand = F) +
expand_limits(y = c(0, 100)) +
scale_y_continuous(breaks = seq(0, 100, by = 20)) +
theme(panel.background = element_blank(),
#legend.position = c(0.90, 1.05),
axis.line = element_line(colour = "black", size = 0.1),
panel.grid.major = element_line(size = 0.01, linetype = "dashed", colour = "grey"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(size = 3),
legend.spacing.y = unit(0.1, "mm"),
#legend.key.width = unit(10, "mm"),
legend.key.height = unit(2, "mm"),
axis.text.x = element_text(size = 2),
axis.text.y = element_text(size = 2),
axis.title.x = element_text(size = 2),
axis.title.y = element_text(size = 3),
#plot.margin = unit(c(5,5,5,5), "mm"),
axis.ticks = element_line(size = 0.1),
legend.margin = margin(0,0,0,0),
legend.box.margin = margin(0,0,0,0))
# graph it out ---------------------
cols <- c("STATE_WIDE" = "red", "NAT_TOTAL" = "black", "NAT_GOV" = "blue")
plot <-
ggplot(data = temp_tibble, aes(x = Date)) +
geom_line(aes(y = StringencyIndexForDisplay, group = Jurisdiction, colour = Jurisdiction), size = 0.1) +
scale_x_date(breaks = as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2020-12-15"),
by = "2 month")),
labels = format.Date(as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2020-12-15"),
by = "2 month")), "%d-%b-%y")) +
scale_colour_manual(values = cols,
name = "",
breaks = c("NAT_TOTAL", "STATE_WIDE", "NAT_GOV"),
labels = c("Overall Stringency Index \nfor Brazil\n","Weighted Stringency Index \nof States\n", "Federal Government Stringency \nIndex\n" )) +
labs(y = "Stringency Index",
x = "") +
coord_cartesian(ylim = c(0, 100), xlim = as.Date(c("2020-01-01", "2020-12-15")), expand = F) +
expand_limits(y = c(0, 100)) +
scale_y_continuous(breaks = seq(0, 100, by = 20)) +
theme(panel.background = element_blank(),
#legend.position = c(0.90, 1.05),
axis.line = element_line(colour = "black", size = 0.1),
panel.grid.major = element_line(size = 0.01, linetype = "dashed", colour = "grey"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(size = 5),
legend.spacing.y = unit(0.1, "mm"),
#legend.key.width = unit(10, "mm"),
legend.key.height = unit(2, "mm"),
axis.text.x = element_text(size = 2),
axis.text.y = element_text(size = 2),
axis.title.x = element_text(size = 2),
axis.title.y = element_text(size = 3),
#plot.margin = unit(c(5,5,5,5), "mm"),
axis.ticks = element_line(size = 0.1),
legend.margin = margin(0,0,0,0),
legend.box.margin = margin(0,0,0,0))
ggsave(plot, filename = "NHB_SFig2_Brazil.eps", height = 2, width = 6, units = "cm", device="eps")
cols <- c("STATE_WIDE" = "red", "NAT_TOTAL" = "black", "NAT_GOV" = "blue")
plot <-
ggplot(data = temp_tibble, aes(x = Date)) +
geom_line(aes(y = StringencyIndexForDisplay, group = Jurisdiction, colour = Jurisdiction), size = 0.1) +
scale_x_date(breaks = as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2020-12-15"),
by = "2 month")),
labels = format.Date(as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2020-12-15"),
by = "2 month")), "%d-%b-%y")) +
scale_colour_manual(values = cols,
name = "",
breaks = c("NAT_TOTAL", "STATE_WIDE", "NAT_GOV"),
labels = c("Overall Stringency Index \nfor Brazil\n","Weighted Stringency Index \nof States\n", "Federal Government Stringency \nIndex\n" )) +
labs(y = "Stringency Index",
x = "") +
coord_cartesian(ylim = c(0, 100), xlim = as.Date(c("2020-01-01", "2020-12-15")), expand = F) +
expand_limits(y = c(0, 100)) +
scale_y_continuous(breaks = seq(0, 100, by = 20)) +
theme(panel.background = element_blank(),
#legend.position = c(0.90, 1.05),
axis.line = element_line(colour = "black", size = 0.1),
panel.grid.major = element_line(size = 0.01, linetype = "dashed", colour = "grey"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.box.spacing = 0,
legend.text = element_text(size = 5),
legend.spacing.y = unit(0.1, "mm"),
#legend.key.width = unit(10, "mm"),
legend.key.height = unit(2, "mm"),
axis.text.x = element_text(size = 2),
axis.text.y = element_text(size = 2),
axis.title.x = element_text(size = 2),
axis.title.y = element_text(size = 3),
#plot.margin = unit(c(5,5,5,5), "mm"),
axis.ticks = element_line(size = 0.1),
legend.margin = margin(0,0,0,0),
legend.box.margin = margin(0,0,0,0))
ggsave(plot, filename = "NHB_SFig2_Brazil.eps", height = 2, width = 6, units = "cm", device="eps")
cols <- c("STATE_WIDE" = "red", "NAT_TOTAL" = "black", "NAT_GOV" = "blue")
plot <-
ggplot(data = temp_tibble, aes(x = Date)) +
geom_line(aes(y = StringencyIndexForDisplay, group = Jurisdiction, colour = Jurisdiction), size = 0.1) +
scale_x_date(breaks = as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2020-12-15"),
by = "2 month")),
labels = format.Date(as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2020-12-15"),
by = "2 month")), "%d-%b-%y")) +
scale_colour_manual(values = cols,
name = "",
breaks = c("NAT_TOTAL", "STATE_WIDE", "NAT_GOV"),
labels = c("Overall Stringency Index \nfor Brazil\n","Weighted Stringency Index \nof States\n", "Federal Government Stringency \nIndex\n" )) +
labs(y = "Stringency Index",
x = "") +
coord_cartesian(ylim = c(0, 100), xlim = as.Date(c("2020-01-01", "2020-12-15")), expand = F) +
expand_limits(y = c(0, 100)) +
scale_y_continuous(breaks = seq(0, 100, by = 20)) +
theme(panel.background = element_blank(),
#legend.position = c(0.90, 1.05),
axis.line = element_line(colour = "black", size = 0.1),
panel.grid.major = element_line(size = 0.01, linetype = "dashed", colour = "grey"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.box.spacing = unit(0, "mm"),
legend.text = element_text(size = 5),
legend.spacing.y = unit(0.1, "mm"),
#legend.key.width = unit(10, "mm"),
legend.key.height = unit(2, "mm"),
axis.text.x = element_text(size = 2),
axis.text.y = element_text(size = 2),
axis.title.x = element_text(size = 2),
axis.title.y = element_text(size = 3),
#plot.margin = unit(c(5,5,5,5), "mm"),
axis.ticks = element_line(size = 0.1),
legend.margin = margin(0,0,0,0),
legend.box.margin = margin(0,0,0,0))
ggsave(plot, filename = "NHB_SFig2_Brazil.eps", height = 2, width = 6, units = "cm", device="eps")
ggsave(plot, filename = "NHB_SFig2_Brazil.eps", height = 3, width = 6, units = "cm", device="eps")
# graph it out ---------------------
cols <- c("STATE_WIDE" = "red", "NAT_TOTAL" = "black", "NAT_GOV" = "blue")
plot <-
ggplot(data = temp_tibble, aes(x = Date)) +
geom_line(aes(y = StringencyIndexForDisplay, group = Jurisdiction, colour = Jurisdiction), size = 0.1) +
scale_x_date(breaks = as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2020-12-15"),
by = "2 month")),
labels = format.Date(as.Date(seq.Date(from = ymd("2020-01-01"), to = ymd("2020-12-15"),
by = "2 month")), "%d-%b-%y")) +
scale_colour_manual(values = cols,
name = "",
breaks = c("NAT_TOTAL", "STATE_WIDE", "NAT_GOV"),
labels = c("Overall Stringency Index \nfor Brazil\n","Weighted Stringency Index \nof States\n", "Federal Government Stringency \nIndex\n" )) +
labs(y = "Stringency Index",
x = "") +
coord_cartesian(ylim = c(0, 100), xlim = as.Date(c("2020-01-01", "2020-12-15")), expand = F) +
expand_limits(y = c(0, 100)) +
scale_y_continuous(breaks = seq(0, 100, by = 20)) +
theme(panel.background = element_blank(),
#legend.position = c(0.90, 1.05),
axis.line = element_line(colour = "black", size = 0.1),
panel.grid.major = element_line(size = 0.01, linetype = "dashed", colour = "grey"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.box.spacing = unit(0.4, "mm"),
legend.text = element_text(size = 5),
legend.spacing.y = unit(0.1, "mm"),
#legend.key.width = unit(10, "mm"),
legend.key.height = unit(2, "mm"),
axis.text.x = element_text(size = 2),
axis.text.y = element_text(size = 2),
axis.title.x = element_text(size = 2),
axis.title.y = element_text(size = 3),
#plot.margin = unit(c(5,5,5,5), "mm"),
axis.ticks = element_line(size = 0.1),
legend.margin = margin(0,0,0,0),
legend.box.margin = margin(0,0,0,0))
ggsave(plot, filename = "NHB_SFig2_Brazil.eps", height = 3, width = 6, units = "cm", device="eps")
ggsave(plot, filename = "NHB_SFig2_Brazil.eps", height = 1.5, width = 6, units = "cm", device="eps")
ggplot(USData2, aes(x = Date, y = Stringency, group = Type, color = Type)) +
geom_line() +
scale_color_manual(name = "Type of Index", values = c("Black", "Palegreen4", "Maroon4"), labels = c("Max Recorded Stringency (State OR Federal)", "Average Weighted Stringency of States", "Stringency of Federal Government")) +
coord_cartesian(ylim = c(0,100), expand = FALSE) +
scale_x_date(breaks = seq(ymd("2020-01-01"), ymd("2020-12-01"), by = "month"), labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")) +
scale_y_continuous(breaks = seq(0, 100, by = 10)) +
theme(panel.background = element_blank(),
axis.line = element_line(color ="grey"),
axis.title = element_text(size=14),
axis.title.x = element_text(vjust=-0.1),
panel.grid.major = element_line(size = 0.3, linetype = "dashed", colour = "grey"),
legend.background = element_blank(),
legend.key = element_blank(),
legend.box.background = element_rect(color = "black"),
legend.position = c(0.75,0.9),
legend.text = element_text(size=13),
legend.title = element_text(size=13))
